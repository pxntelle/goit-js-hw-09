{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,aAKpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbL,EAAKY,iBAAiB,UACtB,SAAkBC,GAChBA,EAAMC,iBAIN,MAAQT,MAAAU,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,OAAOC,SAC7C,IAAIC,EAAaC,OAAON,EAAMO,OAC1BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAC5BG,EAAW,EACfzB,EAAK0B,QACL,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAaG,GAAK,EACpCF,EAAWE,EAAI,EACfxB,EAAcsB,EAAUL,GACrBQ,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA+B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAEhE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBP,EAAA+B,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU,IAEhEe,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form.form');\n// const inputDelay = document.querySelector('input[name=\"delay\"]');\n// const inputStep = document.querySelector('input[name=\"step\"]');\n// const inputAmount = document.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onSubmit);\nfunction onSubmit(event) {\n  event.preventDefault();\n  // let delay = Number(inputDelay.value);\n  // let step = Number(inputStep.value);\n  // let amount = Number(inputAmount.value);\n  const { delay, step, amount } = event.target.elements;\n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(amount.value);\n  let position = 0;\n  form.reset();\n  for (let i = 0; i < amountValue; i += 1) {\n    position = i + 1;\n    createPromise(position, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayValue += stepValue;\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","step","amount","target","elements","delayValue","Number","value","stepValue","amountValue","position1","reset","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.ef1a8b67.js.map"}