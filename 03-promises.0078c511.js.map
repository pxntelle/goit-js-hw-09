{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,aAKpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPL,EAAKY,iBAAiB,UACtB,SAAkBC,GAChBA,EAAMC,iBAIN,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCC,EAAwBH,EAAxBV,MAAOc,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEhCvB,EAAK0B,QACL,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAaE,GAAK,EAEpCxB,EADWwB,EAAI,EACSN,GACrBO,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBP,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9D4B,OAAM,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBP,EAAAgC,OAAOI,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9DgB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form.form');\n// const inputDelay = document.querySelector('input[name=\"delay\"]');\n// const inputStep = document.querySelector('input[name=\"step\"]');\n// const inputAmount = document.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', onSubmit);\nfunction onSubmit(event) {\n  event.preventDefault();\n  // let delay = Number(inputDelay.value);\n  // let step = Number(inputStep.value);\n  // let amount = Number(inputAmount.value);\n  const { delay, step, amount } = event.target.elements;\n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(amount.value);\n  let position = 0;\n  form.reset();\n  for (let i = 0; i < amountValue; i += 1) {\n    position = i + 1;\n    createPromise(position, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayValue += stepValue;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","_elements","target","elements","delay1","step","amount","delayValue","Number","value","stepValue","amountValue","reset","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.0078c511.js.map"}